' CR200/CR200X Series
' Program to log standard data from Implexx Sap Flow Sensors
' Generated by Python Script (PEP 723 compliant)
' Number of Sensors: 34
' Measurement Interval: 30 minutes

'--- Declare Variables and Units ---
Dim N_0 ' Loop counter for Sensor 0 error handling
Dim N_1 ' Loop counter for Sensor 1 error handling
Dim N_2 ' Loop counter for Sensor 2 error handling
Dim N_3 ' Loop counter for Sensor 3 error handling
Dim N_4 ' Loop counter for Sensor 4 error handling
Dim N_5 ' Loop counter for Sensor 5 error handling
Dim N_6 ' Loop counter for Sensor 6 error handling
Dim N_7 ' Loop counter for Sensor 7 error handling
Dim N_8 ' Loop counter for Sensor 8 error handling
Dim N_9 ' Loop counter for Sensor 9 error handling
Dim N_10 ' Loop counter for Sensor a error handling
Dim N_11 ' Loop counter for Sensor b error handling
Dim N_12 ' Loop counter for Sensor c error handling
Dim N_13 ' Loop counter for Sensor d error handling
Dim N_14 ' Loop counter for Sensor e error handling
Dim N_15 ' Loop counter for Sensor f error handling
Dim N_16 ' Loop counter for Sensor g error handling
Dim N_17 ' Loop counter for Sensor h error handling
Dim N_18 ' Loop counter for Sensor i error handling
Dim N_19 ' Loop counter for Sensor j error handling
Dim N_20 ' Loop counter for Sensor k error handling
Dim N_21 ' Loop counter for Sensor l error handling
Dim N_22 ' Loop counter for Sensor m error handling
Dim N_23 ' Loop counter for Sensor n error handling
Dim N_24 ' Loop counter for Sensor o error handling
Dim N_25 ' Loop counter for Sensor p error handling
Dim N_26 ' Loop counter for Sensor q error handling
Dim N_27 ' Loop counter for Sensor r error handling
Dim N_28 ' Loop counter for Sensor s error handling
Dim N_29 ' Loop counter for Sensor t error handling
Dim N_30 ' Loop counter for Sensor u error handling
Dim N_31 ' Loop counter for Sensor v error handling
Dim N_32 ' Loop counter for Sensor w error handling
Dim N_33 ' Loop counter for Sensor x error handling
Public BattV
Public id
Public SDIData_Sensor0(9)
Public SDIData_Sensor1(9)
Public SDIData_Sensor2(9)
Public SDIData_Sensor3(9)
Public SDIData_Sensor4(9)
Public SDIData_Sensor5(9)
Public SDIData_Sensor6(9)
Public SDIData_Sensor7(9)
Public SDIData_Sensor8(9)
Public SDIData_Sensor9(9)
Public SDIData_Sensora(9)
Public SDIData_Sensorb(9)
Public SDIData_Sensorc(9)
Public SDIData_Sensord(9)
Public SDIData_Sensore(9)
Public SDIData_Sensorf(9)
Public SDIData_Sensorg(9)
Public SDIData_Sensorh(9)
Public SDIData_Sensori(9)
Public SDIData_Sensorj(9)
Public SDIData_Sensork(9)
Public SDIData_Sensorl(9)
Public SDIData_Sensorm(9)
Public SDIData_Sensorn(9)
Public SDIData_Sensoro(9)
Public SDIData_Sensorp(9)
Public SDIData_Sensorq(9)
Public SDIData_Sensorr(9)
Public SDIData_Sensors(9)
Public SDIData_Sensort(9)
Public SDIData_Sensoru(9)
Public SDIData_Sensorv(9)
Public SDIData_Sensorw(9)
Public SDIData_Sensorx(9)
Public SensorAddress0
Public SensorAddress1
Public SensorAddress2
Public SensorAddress3
Public SensorAddress4
Public SensorAddress5
Public SensorAddress6
Public SensorAddress7
Public SensorAddress8
Public SensorAddress9
Public SensorAddressa
Public SensorAddressb
Public SensorAddressc
Public SensorAddressd
Public SensorAddresse
Public SensorAddressf
Public SensorAddressg
Public SensorAddressh
Public SensorAddressi
Public SensorAddressj
Public SensorAddressk
Public SensorAddressl
Public SensorAddressm
Public SensorAddressn
Public SensorAddresso
Public SensorAddressp
Public SensorAddressq
Public SensorAddressr
Public SensorAddresss
Public SensorAddresst
Public SensorAddressu
Public SensorAddressv
Public SensorAddressw
Public SensorAddressx

'--- Alias Declarations (Maps array elements to meaningful names) ---
Alias SDIData_Sensor0(1) = SapFlwTot0
Alias SDIData_Sensor0(2) = VhOuter0
Alias SDIData_Sensor0(3) = VhInner0
Alias SDIData_Sensor0(4) = AlphaOut0
Alias SDIData_Sensor0(5) = AlphaIn0
Alias SDIData_Sensor0(6) = BetaOut0
Alias SDIData_Sensor0(7) = BetaIn0
Alias SDIData_Sensor0(8) = tMaxTout0
Alias SDIData_Sensor0(9) = tMaxTin0
Alias SDIData_Sensor1(1) = SapFlwTot1
Alias SDIData_Sensor1(2) = VhOuter1
Alias SDIData_Sensor1(3) = VhInner1
Alias SDIData_Sensor1(4) = AlphaOut1
Alias SDIData_Sensor1(5) = AlphaIn1
Alias SDIData_Sensor1(6) = BetaOut1
Alias SDIData_Sensor1(7) = BetaIn1
Alias SDIData_Sensor1(8) = tMaxTout1
Alias SDIData_Sensor1(9) = tMaxTin1
Alias SDIData_Sensor2(1) = SapFlwTot2
Alias SDIData_Sensor2(2) = VhOuter2
Alias SDIData_Sensor2(3) = VhInner2
Alias SDIData_Sensor2(4) = AlphaOut2
Alias SDIData_Sensor2(5) = AlphaIn2
Alias SDIData_Sensor2(6) = BetaOut2
Alias SDIData_Sensor2(7) = BetaIn2
Alias SDIData_Sensor2(8) = tMaxTout2
Alias SDIData_Sensor2(9) = tMaxTin2
Alias SDIData_Sensor3(1) = SapFlwTot3
Alias SDIData_Sensor3(2) = VhOuter3
Alias SDIData_Sensor3(3) = VhInner3
Alias SDIData_Sensor3(4) = AlphaOut3
Alias SDIData_Sensor3(5) = AlphaIn3
Alias SDIData_Sensor3(6) = BetaOut3
Alias SDIData_Sensor3(7) = BetaIn3
Alias SDIData_Sensor3(8) = tMaxTout3
Alias SDIData_Sensor3(9) = tMaxTin3
Alias SDIData_Sensor4(1) = SapFlwTot4
Alias SDIData_Sensor4(2) = VhOuter4
Alias SDIData_Sensor4(3) = VhInner4
Alias SDIData_Sensor4(4) = AlphaOut4
Alias SDIData_Sensor4(5) = AlphaIn4
Alias SDIData_Sensor4(6) = BetaOut4
Alias SDIData_Sensor4(7) = BetaIn4
Alias SDIData_Sensor4(8) = tMaxTout4
Alias SDIData_Sensor4(9) = tMaxTin4
Alias SDIData_Sensor5(1) = SapFlwTot5
Alias SDIData_Sensor5(2) = VhOuter5
Alias SDIData_Sensor5(3) = VhInner5
Alias SDIData_Sensor5(4) = AlphaOut5
Alias SDIData_Sensor5(5) = AlphaIn5
Alias SDIData_Sensor5(6) = BetaOut5
Alias SDIData_Sensor5(7) = BetaIn5
Alias SDIData_Sensor5(8) = tMaxTout5
Alias SDIData_Sensor5(9) = tMaxTin5
Alias SDIData_Sensor6(1) = SapFlwTot6
Alias SDIData_Sensor6(2) = VhOuter6
Alias SDIData_Sensor6(3) = VhInner6
Alias SDIData_Sensor6(4) = AlphaOut6
Alias SDIData_Sensor6(5) = AlphaIn6
Alias SDIData_Sensor6(6) = BetaOut6
Alias SDIData_Sensor6(7) = BetaIn6
Alias SDIData_Sensor6(8) = tMaxTout6
Alias SDIData_Sensor6(9) = tMaxTin6
Alias SDIData_Sensor7(1) = SapFlwTot7
Alias SDIData_Sensor7(2) = VhOuter7
Alias SDIData_Sensor7(3) = VhInner7
Alias SDIData_Sensor7(4) = AlphaOut7
Alias SDIData_Sensor7(5) = AlphaIn7
Alias SDIData_Sensor7(6) = BetaOut7
Alias SDIData_Sensor7(7) = BetaIn7
Alias SDIData_Sensor7(8) = tMaxTout7
Alias SDIData_Sensor7(9) = tMaxTin7
Alias SDIData_Sensor8(1) = SapFlwTot8
Alias SDIData_Sensor8(2) = VhOuter8
Alias SDIData_Sensor8(3) = VhInner8
Alias SDIData_Sensor8(4) = AlphaOut8
Alias SDIData_Sensor8(5) = AlphaIn8
Alias SDIData_Sensor8(6) = BetaOut8
Alias SDIData_Sensor8(7) = BetaIn8
Alias SDIData_Sensor8(8) = tMaxTout8
Alias SDIData_Sensor8(9) = tMaxTin8
Alias SDIData_Sensor9(1) = SapFlwTot9
Alias SDIData_Sensor9(2) = VhOuter9
Alias SDIData_Sensor9(3) = VhInner9
Alias SDIData_Sensor9(4) = AlphaOut9
Alias SDIData_Sensor9(5) = AlphaIn9
Alias SDIData_Sensor9(6) = BetaOut9
Alias SDIData_Sensor9(7) = BetaIn9
Alias SDIData_Sensor9(8) = tMaxTout9
Alias SDIData_Sensor9(9) = tMaxTin9
Alias SDIData_Sensora(1) = SapFlwTota
Alias SDIData_Sensora(2) = VhOutera
Alias SDIData_Sensora(3) = VhInnera
Alias SDIData_Sensora(4) = AlphaOuta
Alias SDIData_Sensora(5) = AlphaIna
Alias SDIData_Sensora(6) = BetaOuta
Alias SDIData_Sensora(7) = BetaIna
Alias SDIData_Sensora(8) = tMaxTouta
Alias SDIData_Sensora(9) = tMaxTina
Alias SDIData_Sensorb(1) = SapFlwTotb
Alias SDIData_Sensorb(2) = VhOuterb
Alias SDIData_Sensorb(3) = VhInnerb
Alias SDIData_Sensorb(4) = AlphaOutb
Alias SDIData_Sensorb(5) = AlphaInb
Alias SDIData_Sensorb(6) = BetaOutb
Alias SDIData_Sensorb(7) = BetaInb
Alias SDIData_Sensorb(8) = tMaxToutb
Alias SDIData_Sensorb(9) = tMaxTinb
Alias SDIData_Sensorc(1) = SapFlwTotc
Alias SDIData_Sensorc(2) = VhOuterc
Alias SDIData_Sensorc(3) = VhInnerc
Alias SDIData_Sensorc(4) = AlphaOutc
Alias SDIData_Sensorc(5) = AlphaInc
Alias SDIData_Sensorc(6) = BetaOutc
Alias SDIData_Sensorc(7) = BetaInc
Alias SDIData_Sensorc(8) = tMaxToutc
Alias SDIData_Sensorc(9) = tMaxTinc
Alias SDIData_Sensord(1) = SapFlwTotd
Alias SDIData_Sensord(2) = VhOuterd
Alias SDIData_Sensord(3) = VhInnerd
Alias SDIData_Sensord(4) = AlphaOutd
Alias SDIData_Sensord(5) = AlphaInd
Alias SDIData_Sensord(6) = BetaOutd
Alias SDIData_Sensord(7) = BetaInd
Alias SDIData_Sensord(8) = tMaxToutd
Alias SDIData_Sensord(9) = tMaxTind
Alias SDIData_Sensore(1) = SapFlwTote
Alias SDIData_Sensore(2) = VhOutere
Alias SDIData_Sensore(3) = VhInnere
Alias SDIData_Sensore(4) = AlphaOute
Alias SDIData_Sensore(5) = AlphaIne
Alias SDIData_Sensore(6) = BetaOute
Alias SDIData_Sensore(7) = BetaIne
Alias SDIData_Sensore(8) = tMaxToute
Alias SDIData_Sensore(9) = tMaxTine
Alias SDIData_Sensorf(1) = SapFlwTotf
Alias SDIData_Sensorf(2) = VhOuterf
Alias SDIData_Sensorf(3) = VhInnerf
Alias SDIData_Sensorf(4) = AlphaOutf
Alias SDIData_Sensorf(5) = AlphaInf
Alias SDIData_Sensorf(6) = BetaOutf
Alias SDIData_Sensorf(7) = BetaInf
Alias SDIData_Sensorf(8) = tMaxToutf
Alias SDIData_Sensorf(9) = tMaxTinf
Alias SDIData_Sensorg(1) = SapFlwTotg
Alias SDIData_Sensorg(2) = VhOuterg
Alias SDIData_Sensorg(3) = VhInnerg
Alias SDIData_Sensorg(4) = AlphaOutg
Alias SDIData_Sensorg(5) = AlphaIng
Alias SDIData_Sensorg(6) = BetaOutg
Alias SDIData_Sensorg(7) = BetaIng
Alias SDIData_Sensorg(8) = tMaxToutg
Alias SDIData_Sensorg(9) = tMaxTing
Alias SDIData_Sensorh(1) = SapFlwToth
Alias SDIData_Sensorh(2) = VhOuterh
Alias SDIData_Sensorh(3) = VhInnerh
Alias SDIData_Sensorh(4) = AlphaOuth
Alias SDIData_Sensorh(5) = AlphaInh
Alias SDIData_Sensorh(6) = BetaOuth
Alias SDIData_Sensorh(7) = BetaInh
Alias SDIData_Sensorh(8) = tMaxTouth
Alias SDIData_Sensorh(9) = tMaxTinh
Alias SDIData_Sensori(1) = SapFlwToti
Alias SDIData_Sensori(2) = VhOuteri
Alias SDIData_Sensori(3) = VhInneri
Alias SDIData_Sensori(4) = AlphaOuti
Alias SDIData_Sensori(5) = AlphaIni
Alias SDIData_Sensori(6) = BetaOuti
Alias SDIData_Sensori(7) = BetaIni
Alias SDIData_Sensori(8) = tMaxTouti
Alias SDIData_Sensori(9) = tMaxTini
Alias SDIData_Sensorj(1) = SapFlwTotj
Alias SDIData_Sensorj(2) = VhOuterj
Alias SDIData_Sensorj(3) = VhInnerj
Alias SDIData_Sensorj(4) = AlphaOutj
Alias SDIData_Sensorj(5) = AlphaInj
Alias SDIData_Sensorj(6) = BetaOutj
Alias SDIData_Sensorj(7) = BetaInj
Alias SDIData_Sensorj(8) = tMaxToutj
Alias SDIData_Sensorj(9) = tMaxTinj
Alias SDIData_Sensork(1) = SapFlwTotk
Alias SDIData_Sensork(2) = VhOuterk
Alias SDIData_Sensork(3) = VhInnerk
Alias SDIData_Sensork(4) = AlphaOutk
Alias SDIData_Sensork(5) = AlphaInk
Alias SDIData_Sensork(6) = BetaOutk
Alias SDIData_Sensork(7) = BetaInk
Alias SDIData_Sensork(8) = tMaxToutk
Alias SDIData_Sensork(9) = tMaxTink
Alias SDIData_Sensorl(1) = SapFlwTotl
Alias SDIData_Sensorl(2) = VhOuterl
Alias SDIData_Sensorl(3) = VhInnerl
Alias SDIData_Sensorl(4) = AlphaOutl
Alias SDIData_Sensorl(5) = AlphaInl
Alias SDIData_Sensorl(6) = BetaOutl
Alias SDIData_Sensorl(7) = BetaInl
Alias SDIData_Sensorl(8) = tMaxToutl
Alias SDIData_Sensorl(9) = tMaxTinl
Alias SDIData_Sensorm(1) = SapFlwTotm
Alias SDIData_Sensorm(2) = VhOuterm
Alias SDIData_Sensorm(3) = VhInnerm
Alias SDIData_Sensorm(4) = AlphaOutm
Alias SDIData_Sensorm(5) = AlphaInm
Alias SDIData_Sensorm(6) = BetaOutm
Alias SDIData_Sensorm(7) = BetaInm
Alias SDIData_Sensorm(8) = tMaxToutm
Alias SDIData_Sensorm(9) = tMaxTinm
Alias SDIData_Sensorn(1) = SapFlwTotn
Alias SDIData_Sensorn(2) = VhOutern
Alias SDIData_Sensorn(3) = VhInnern
Alias SDIData_Sensorn(4) = AlphaOutn
Alias SDIData_Sensorn(5) = AlphaInn
Alias SDIData_Sensorn(6) = BetaOutn
Alias SDIData_Sensorn(7) = BetaInn
Alias SDIData_Sensorn(8) = tMaxToutn
Alias SDIData_Sensorn(9) = tMaxTinn
Alias SDIData_Sensoro(1) = SapFlwToto
Alias SDIData_Sensoro(2) = VhOutero
Alias SDIData_Sensoro(3) = VhInnero
Alias SDIData_Sensoro(4) = AlphaOuto
Alias SDIData_Sensoro(5) = AlphaIno
Alias SDIData_Sensoro(6) = BetaOuto
Alias SDIData_Sensoro(7) = BetaIno
Alias SDIData_Sensoro(8) = tMaxTouto
Alias SDIData_Sensoro(9) = tMaxTino
Alias SDIData_Sensorp(1) = SapFlwTotp
Alias SDIData_Sensorp(2) = VhOuterp
Alias SDIData_Sensorp(3) = VhInnerp
Alias SDIData_Sensorp(4) = AlphaOutp
Alias SDIData_Sensorp(5) = AlphaInp
Alias SDIData_Sensorp(6) = BetaOutp
Alias SDIData_Sensorp(7) = BetaInp
Alias SDIData_Sensorp(8) = tMaxToutp
Alias SDIData_Sensorp(9) = tMaxTinp
Alias SDIData_Sensorq(1) = SapFlwTotq
Alias SDIData_Sensorq(2) = VhOuterq
Alias SDIData_Sensorq(3) = VhInnerq
Alias SDIData_Sensorq(4) = AlphaOutq
Alias SDIData_Sensorq(5) = AlphaInq
Alias SDIData_Sensorq(6) = BetaOutq
Alias SDIData_Sensorq(7) = BetaInq
Alias SDIData_Sensorq(8) = tMaxToutq
Alias SDIData_Sensorq(9) = tMaxTinq
Alias SDIData_Sensorr(1) = SapFlwTotr
Alias SDIData_Sensorr(2) = VhOuterr
Alias SDIData_Sensorr(3) = VhInnerr
Alias SDIData_Sensorr(4) = AlphaOutr
Alias SDIData_Sensorr(5) = AlphaInr
Alias SDIData_Sensorr(6) = BetaOutr
Alias SDIData_Sensorr(7) = BetaInr
Alias SDIData_Sensorr(8) = tMaxToutr
Alias SDIData_Sensorr(9) = tMaxTinr
Alias SDIData_Sensors(1) = SapFlwTots
Alias SDIData_Sensors(2) = VhOuters
Alias SDIData_Sensors(3) = VhInners
Alias SDIData_Sensors(4) = AlphaOuts
Alias SDIData_Sensors(5) = AlphaIns
Alias SDIData_Sensors(6) = BetaOuts
Alias SDIData_Sensors(7) = BetaIns
Alias SDIData_Sensors(8) = tMaxTouts
Alias SDIData_Sensors(9) = tMaxTins
Alias SDIData_Sensort(1) = SapFlwTott
Alias SDIData_Sensort(2) = VhOutert
Alias SDIData_Sensort(3) = VhInnert
Alias SDIData_Sensort(4) = AlphaOutt
Alias SDIData_Sensort(5) = AlphaInt
Alias SDIData_Sensort(6) = BetaOutt
Alias SDIData_Sensort(7) = BetaInt
Alias SDIData_Sensort(8) = tMaxToutt
Alias SDIData_Sensort(9) = tMaxTint
Alias SDIData_Sensoru(1) = SapFlwTotu
Alias SDIData_Sensoru(2) = VhOuteru
Alias SDIData_Sensoru(3) = VhInneru
Alias SDIData_Sensoru(4) = AlphaOutu
Alias SDIData_Sensoru(5) = AlphaInu
Alias SDIData_Sensoru(6) = BetaOutu
Alias SDIData_Sensoru(7) = BetaInu
Alias SDIData_Sensoru(8) = tMaxToutu
Alias SDIData_Sensoru(9) = tMaxTinu
Alias SDIData_Sensorv(1) = SapFlwTotv
Alias SDIData_Sensorv(2) = VhOuterv
Alias SDIData_Sensorv(3) = VhInnerv
Alias SDIData_Sensorv(4) = AlphaOutv
Alias SDIData_Sensorv(5) = AlphaInv
Alias SDIData_Sensorv(6) = BetaOutv
Alias SDIData_Sensorv(7) = BetaInv
Alias SDIData_Sensorv(8) = tMaxToutv
Alias SDIData_Sensorv(9) = tMaxTinv
Alias SDIData_Sensorw(1) = SapFlwTotw
Alias SDIData_Sensorw(2) = VhOuterw
Alias SDIData_Sensorw(3) = VhInnerw
Alias SDIData_Sensorw(4) = AlphaOutw
Alias SDIData_Sensorw(5) = AlphaInw
Alias SDIData_Sensorw(6) = BetaOutw
Alias SDIData_Sensorw(7) = BetaInw
Alias SDIData_Sensorw(8) = tMaxToutw
Alias SDIData_Sensorw(9) = tMaxTinw
Alias SDIData_Sensorx(1) = SapFlwTotx
Alias SDIData_Sensorx(2) = VhOuterx
Alias SDIData_Sensorx(3) = VhInnerx
Alias SDIData_Sensorx(4) = AlphaOutx
Alias SDIData_Sensorx(5) = AlphaInx
Alias SDIData_Sensorx(6) = BetaOutx
Alias SDIData_Sensorx(7) = BetaInx
Alias SDIData_Sensorx(8) = tMaxToutx
Alias SDIData_Sensorx(9) = tMaxTinx

'--- Units Declarations ---
Units BattV=Volts
Units SapFlwTot0=literPerHour
Units VhOuter0=heatVelocity
Units VhInner0=heatVelocity
Units AlphaOut0=logTRatio
Units AlphaIn0=logTRatio
Units BetaOut0=logTRatio
Units BetaIn0=logTRatio
Units tMaxTout0=second
Units tMaxTin0=second
Units SapFlwTot1=literPerHour
Units VhOuter1=heatVelocity
Units VhInner1=heatVelocity
Units AlphaOut1=logTRatio
Units AlphaIn1=logTRatio
Units BetaOut1=logTRatio
Units BetaIn1=logTRatio
Units tMaxTout1=second
Units tMaxTin1=second
Units SapFlwTot2=literPerHour
Units VhOuter2=heatVelocity
Units VhInner2=heatVelocity
Units AlphaOut2=logTRatio
Units AlphaIn2=logTRatio
Units BetaOut2=logTRatio
Units BetaIn2=logTRatio
Units tMaxTout2=second
Units tMaxTin2=second
Units SapFlwTot3=literPerHour
Units VhOuter3=heatVelocity
Units VhInner3=heatVelocity
Units AlphaOut3=logTRatio
Units AlphaIn3=logTRatio
Units BetaOut3=logTRatio
Units BetaIn3=logTRatio
Units tMaxTout3=second
Units tMaxTin3=second
Units SapFlwTot4=literPerHour
Units VhOuter4=heatVelocity
Units VhInner4=heatVelocity
Units AlphaOut4=logTRatio
Units AlphaIn4=logTRatio
Units BetaOut4=logTRatio
Units BetaIn4=logTRatio
Units tMaxTout4=second
Units tMaxTin4=second
Units SapFlwTot5=literPerHour
Units VhOuter5=heatVelocity
Units VhInner5=heatVelocity
Units AlphaOut5=logTRatio
Units AlphaIn5=logTRatio
Units BetaOut5=logTRatio
Units BetaIn5=logTRatio
Units tMaxTout5=second
Units tMaxTin5=second
Units SapFlwTot6=literPerHour
Units VhOuter6=heatVelocity
Units VhInner6=heatVelocity
Units AlphaOut6=logTRatio
Units AlphaIn6=logTRatio
Units BetaOut6=logTRatio
Units BetaIn6=logTRatio
Units tMaxTout6=second
Units tMaxTin6=second
Units SapFlwTot7=literPerHour
Units VhOuter7=heatVelocity
Units VhInner7=heatVelocity
Units AlphaOut7=logTRatio
Units AlphaIn7=logTRatio
Units BetaOut7=logTRatio
Units BetaIn7=logTRatio
Units tMaxTout7=second
Units tMaxTin7=second
Units SapFlwTot8=literPerHour
Units VhOuter8=heatVelocity
Units VhInner8=heatVelocity
Units AlphaOut8=logTRatio
Units AlphaIn8=logTRatio
Units BetaOut8=logTRatio
Units BetaIn8=logTRatio
Units tMaxTout8=second
Units tMaxTin8=second
Units SapFlwTot9=literPerHour
Units VhOuter9=heatVelocity
Units VhInner9=heatVelocity
Units AlphaOut9=logTRatio
Units AlphaIn9=logTRatio
Units BetaOut9=logTRatio
Units BetaIn9=logTRatio
Units tMaxTout9=second
Units tMaxTin9=second
Units SapFlwTota=literPerHour
Units VhOutera=heatVelocity
Units VhInnera=heatVelocity
Units AlphaOuta=logTRatio
Units AlphaIna=logTRatio
Units BetaOuta=logTRatio
Units BetaIna=logTRatio
Units tMaxTouta=second
Units tMaxTina=second
Units SapFlwTotb=literPerHour
Units VhOuterb=heatVelocity
Units VhInnerb=heatVelocity
Units AlphaOutb=logTRatio
Units AlphaInb=logTRatio
Units BetaOutb=logTRatio
Units BetaInb=logTRatio
Units tMaxToutb=second
Units tMaxTinb=second
Units SapFlwTotc=literPerHour
Units VhOuterc=heatVelocity
Units VhInnerc=heatVelocity
Units AlphaOutc=logTRatio
Units AlphaInc=logTRatio
Units BetaOutc=logTRatio
Units BetaInc=logTRatio
Units tMaxToutc=second
Units tMaxTinc=second
Units SapFlwTotd=literPerHour
Units VhOuterd=heatVelocity
Units VhInnerd=heatVelocity
Units AlphaOutd=logTRatio
Units AlphaInd=logTRatio
Units BetaOutd=logTRatio
Units BetaInd=logTRatio
Units tMaxToutd=second
Units tMaxTind=second
Units SapFlwTote=literPerHour
Units VhOutere=heatVelocity
Units VhInnere=heatVelocity
Units AlphaOute=logTRatio
Units AlphaIne=logTRatio
Units BetaOute=logTRatio
Units BetaIne=logTRatio
Units tMaxToute=second
Units tMaxTine=second
Units SapFlwTotf=literPerHour
Units VhOuterf=heatVelocity
Units VhInnerf=heatVelocity
Units AlphaOutf=logTRatio
Units AlphaInf=logTRatio
Units BetaOutf=logTRatio
Units BetaInf=logTRatio
Units tMaxToutf=second
Units tMaxTinf=second
Units SapFlwTotg=literPerHour
Units VhOuterg=heatVelocity
Units VhInnerg=heatVelocity
Units AlphaOutg=logTRatio
Units AlphaIng=logTRatio
Units BetaOutg=logTRatio
Units BetaIng=logTRatio
Units tMaxToutg=second
Units tMaxTing=second
Units SapFlwToth=literPerHour
Units VhOuterh=heatVelocity
Units VhInnerh=heatVelocity
Units AlphaOuth=logTRatio
Units AlphaInh=logTRatio
Units BetaOuth=logTRatio
Units BetaInh=logTRatio
Units tMaxTouth=second
Units tMaxTinh=second
Units SapFlwToti=literPerHour
Units VhOuteri=heatVelocity
Units VhInneri=heatVelocity
Units AlphaOuti=logTRatio
Units AlphaIni=logTRatio
Units BetaOuti=logTRatio
Units BetaIni=logTRatio
Units tMaxTouti=second
Units tMaxTini=second
Units SapFlwTotj=literPerHour
Units VhOuterj=heatVelocity
Units VhInnerj=heatVelocity
Units AlphaOutj=logTRatio
Units AlphaInj=logTRatio
Units BetaOutj=logTRatio
Units BetaInj=logTRatio
Units tMaxToutj=second
Units tMaxTinj=second
Units SapFlwTotk=literPerHour
Units VhOuterk=heatVelocity
Units VhInnerk=heatVelocity
Units AlphaOutk=logTRatio
Units AlphaInk=logTRatio
Units BetaOutk=logTRatio
Units BetaInk=logTRatio
Units tMaxToutk=second
Units tMaxTink=second
Units SapFlwTotl=literPerHour
Units VhOuterl=heatVelocity
Units VhInnerl=heatVelocity
Units AlphaOutl=logTRatio
Units AlphaInl=logTRatio
Units BetaOutl=logTRatio
Units BetaInl=logTRatio
Units tMaxToutl=second
Units tMaxTinl=second
Units SapFlwTotm=literPerHour
Units VhOuterm=heatVelocity
Units VhInnerm=heatVelocity
Units AlphaOutm=logTRatio
Units AlphaInm=logTRatio
Units BetaOutm=logTRatio
Units BetaInm=logTRatio
Units tMaxToutm=second
Units tMaxTinm=second
Units SapFlwTotn=literPerHour
Units VhOutern=heatVelocity
Units VhInnern=heatVelocity
Units AlphaOutn=logTRatio
Units AlphaInn=logTRatio
Units BetaOutn=logTRatio
Units BetaInn=logTRatio
Units tMaxToutn=second
Units tMaxTinn=second
Units SapFlwToto=literPerHour
Units VhOutero=heatVelocity
Units VhInnero=heatVelocity
Units AlphaOuto=logTRatio
Units AlphaIno=logTRatio
Units BetaOuto=logTRatio
Units BetaIno=logTRatio
Units tMaxTouto=second
Units tMaxTino=second
Units SapFlwTotp=literPerHour
Units VhOuterp=heatVelocity
Units VhInnerp=heatVelocity
Units AlphaOutp=logTRatio
Units AlphaInp=logTRatio
Units BetaOutp=logTRatio
Units BetaInp=logTRatio
Units tMaxToutp=second
Units tMaxTinp=second
Units SapFlwTotq=literPerHour
Units VhOuterq=heatVelocity
Units VhInnerq=heatVelocity
Units AlphaOutq=logTRatio
Units AlphaInq=logTRatio
Units BetaOutq=logTRatio
Units BetaInq=logTRatio
Units tMaxToutq=second
Units tMaxTinq=second
Units SapFlwTotr=literPerHour
Units VhOuterr=heatVelocity
Units VhInnerr=heatVelocity
Units AlphaOutr=logTRatio
Units AlphaInr=logTRatio
Units BetaOutr=logTRatio
Units BetaInr=logTRatio
Units tMaxToutr=second
Units tMaxTinr=second
Units SapFlwTots=literPerHour
Units VhOuters=heatVelocity
Units VhInners=heatVelocity
Units AlphaOuts=logTRatio
Units AlphaIns=logTRatio
Units BetaOuts=logTRatio
Units BetaIns=logTRatio
Units tMaxTouts=second
Units tMaxTins=second
Units SapFlwTott=literPerHour
Units VhOutert=heatVelocity
Units VhInnert=heatVelocity
Units AlphaOutt=logTRatio
Units AlphaInt=logTRatio
Units BetaOutt=logTRatio
Units BetaInt=logTRatio
Units tMaxToutt=second
Units tMaxTint=second
Units SapFlwTotu=literPerHour
Units VhOuteru=heatVelocity
Units VhInneru=heatVelocity
Units AlphaOutu=logTRatio
Units AlphaInu=logTRatio
Units BetaOutu=logTRatio
Units BetaInu=logTRatio
Units tMaxToutu=second
Units tMaxTinu=second
Units SapFlwTotv=literPerHour
Units VhOuterv=heatVelocity
Units VhInnerv=heatVelocity
Units AlphaOutv=logTRatio
Units AlphaInv=logTRatio
Units BetaOutv=logTRatio
Units BetaInv=logTRatio
Units tMaxToutv=second
Units tMaxTinv=second
Units SapFlwTotw=literPerHour
Units VhOuterw=heatVelocity
Units VhInnerw=heatVelocity
Units AlphaOutw=logTRatio
Units AlphaInw=logTRatio
Units BetaOutw=logTRatio
Units BetaInw=logTRatio
Units tMaxToutw=second
Units tMaxTinw=second
Units SapFlwTotx=literPerHour
Units VhOuterx=heatVelocity
Units VhInnerx=heatVelocity
Units AlphaOutx=logTRatio
Units AlphaInx=logTRatio
Units BetaOutx=logTRatio
Units BetaInx=logTRatio
Units tMaxToutx=second
Units tMaxTinx=second

'--- Define Data Tables (One table per sensor due to CR200X field limit) ---
' Note: CR200X dataloggers have a limit of 16 fields per table.
' DataTable names must be <= 12 characters.
DataTable(Table_S0,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress0)
	Sample(1,SapFlwTot0)
	Sample(1,VhOuter0)
	Sample(1,VhInner0)
	Sample(1,AlphaOut0)
	Sample(1,AlphaIn0)
	Sample(1,BetaOut0)
	Sample(1,BetaIn0)
	Sample(1,tMaxTout0)
	Sample(1,tMaxTin0)
EndTable

DataTable(Table_S1,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress1)
	Sample(1,SapFlwTot1)
	Sample(1,VhOuter1)
	Sample(1,VhInner1)
	Sample(1,AlphaOut1)
	Sample(1,AlphaIn1)
	Sample(1,BetaOut1)
	Sample(1,BetaIn1)
	Sample(1,tMaxTout1)
	Sample(1,tMaxTin1)
EndTable

DataTable(Table_S2,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress2)
	Sample(1,SapFlwTot2)
	Sample(1,VhOuter2)
	Sample(1,VhInner2)
	Sample(1,AlphaOut2)
	Sample(1,AlphaIn2)
	Sample(1,BetaOut2)
	Sample(1,BetaIn2)
	Sample(1,tMaxTout2)
	Sample(1,tMaxTin2)
EndTable

DataTable(Table_S3,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress3)
	Sample(1,SapFlwTot3)
	Sample(1,VhOuter3)
	Sample(1,VhInner3)
	Sample(1,AlphaOut3)
	Sample(1,AlphaIn3)
	Sample(1,BetaOut3)
	Sample(1,BetaIn3)
	Sample(1,tMaxTout3)
	Sample(1,tMaxTin3)
EndTable

DataTable(Table_S4,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress4)
	Sample(1,SapFlwTot4)
	Sample(1,VhOuter4)
	Sample(1,VhInner4)
	Sample(1,AlphaOut4)
	Sample(1,AlphaIn4)
	Sample(1,BetaOut4)
	Sample(1,BetaIn4)
	Sample(1,tMaxTout4)
	Sample(1,tMaxTin4)
EndTable

DataTable(Table_S5,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress5)
	Sample(1,SapFlwTot5)
	Sample(1,VhOuter5)
	Sample(1,VhInner5)
	Sample(1,AlphaOut5)
	Sample(1,AlphaIn5)
	Sample(1,BetaOut5)
	Sample(1,BetaIn5)
	Sample(1,tMaxTout5)
	Sample(1,tMaxTin5)
EndTable

DataTable(Table_S6,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress6)
	Sample(1,SapFlwTot6)
	Sample(1,VhOuter6)
	Sample(1,VhInner6)
	Sample(1,AlphaOut6)
	Sample(1,AlphaIn6)
	Sample(1,BetaOut6)
	Sample(1,BetaIn6)
	Sample(1,tMaxTout6)
	Sample(1,tMaxTin6)
EndTable

DataTable(Table_S7,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress7)
	Sample(1,SapFlwTot7)
	Sample(1,VhOuter7)
	Sample(1,VhInner7)
	Sample(1,AlphaOut7)
	Sample(1,AlphaIn7)
	Sample(1,BetaOut7)
	Sample(1,BetaIn7)
	Sample(1,tMaxTout7)
	Sample(1,tMaxTin7)
EndTable

DataTable(Table_S8,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress8)
	Sample(1,SapFlwTot8)
	Sample(1,VhOuter8)
	Sample(1,VhInner8)
	Sample(1,AlphaOut8)
	Sample(1,AlphaIn8)
	Sample(1,BetaOut8)
	Sample(1,BetaIn8)
	Sample(1,tMaxTout8)
	Sample(1,tMaxTin8)
EndTable

DataTable(Table_S9,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddress9)
	Sample(1,SapFlwTot9)
	Sample(1,VhOuter9)
	Sample(1,VhInner9)
	Sample(1,AlphaOut9)
	Sample(1,AlphaIn9)
	Sample(1,BetaOut9)
	Sample(1,BetaIn9)
	Sample(1,tMaxTout9)
	Sample(1,tMaxTin9)
EndTable

DataTable(Table_Sa,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressa)
	Sample(1,SapFlwTota)
	Sample(1,VhOutera)
	Sample(1,VhInnera)
	Sample(1,AlphaOuta)
	Sample(1,AlphaIna)
	Sample(1,BetaOuta)
	Sample(1,BetaIna)
	Sample(1,tMaxTouta)
	Sample(1,tMaxTina)
EndTable

DataTable(Table_Sb,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressb)
	Sample(1,SapFlwTotb)
	Sample(1,VhOuterb)
	Sample(1,VhInnerb)
	Sample(1,AlphaOutb)
	Sample(1,AlphaInb)
	Sample(1,BetaOutb)
	Sample(1,BetaInb)
	Sample(1,tMaxToutb)
	Sample(1,tMaxTinb)
EndTable

DataTable(Table_Sc,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressc)
	Sample(1,SapFlwTotc)
	Sample(1,VhOuterc)
	Sample(1,VhInnerc)
	Sample(1,AlphaOutc)
	Sample(1,AlphaInc)
	Sample(1,BetaOutc)
	Sample(1,BetaInc)
	Sample(1,tMaxToutc)
	Sample(1,tMaxTinc)
EndTable

DataTable(Table_Sd,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressd)
	Sample(1,SapFlwTotd)
	Sample(1,VhOuterd)
	Sample(1,VhInnerd)
	Sample(1,AlphaOutd)
	Sample(1,AlphaInd)
	Sample(1,BetaOutd)
	Sample(1,BetaInd)
	Sample(1,tMaxToutd)
	Sample(1,tMaxTind)
EndTable

DataTable(Table_Se,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddresse)
	Sample(1,SapFlwTote)
	Sample(1,VhOutere)
	Sample(1,VhInnere)
	Sample(1,AlphaOute)
	Sample(1,AlphaIne)
	Sample(1,BetaOute)
	Sample(1,BetaIne)
	Sample(1,tMaxToute)
	Sample(1,tMaxTine)
EndTable

DataTable(Table_Sf,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressf)
	Sample(1,SapFlwTotf)
	Sample(1,VhOuterf)
	Sample(1,VhInnerf)
	Sample(1,AlphaOutf)
	Sample(1,AlphaInf)
	Sample(1,BetaOutf)
	Sample(1,BetaInf)
	Sample(1,tMaxToutf)
	Sample(1,tMaxTinf)
EndTable

DataTable(Table_Sg,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressg)
	Sample(1,SapFlwTotg)
	Sample(1,VhOuterg)
	Sample(1,VhInnerg)
	Sample(1,AlphaOutg)
	Sample(1,AlphaIng)
	Sample(1,BetaOutg)
	Sample(1,BetaIng)
	Sample(1,tMaxToutg)
	Sample(1,tMaxTing)
EndTable

DataTable(Table_Sh,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressh)
	Sample(1,SapFlwToth)
	Sample(1,VhOuterh)
	Sample(1,VhInnerh)
	Sample(1,AlphaOuth)
	Sample(1,AlphaInh)
	Sample(1,BetaOuth)
	Sample(1,BetaInh)
	Sample(1,tMaxTouth)
	Sample(1,tMaxTinh)
EndTable

DataTable(Table_Si,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressi)
	Sample(1,SapFlwToti)
	Sample(1,VhOuteri)
	Sample(1,VhInneri)
	Sample(1,AlphaOuti)
	Sample(1,AlphaIni)
	Sample(1,BetaOuti)
	Sample(1,BetaIni)
	Sample(1,tMaxTouti)
	Sample(1,tMaxTini)
EndTable

DataTable(Table_Sj,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressj)
	Sample(1,SapFlwTotj)
	Sample(1,VhOuterj)
	Sample(1,VhInnerj)
	Sample(1,AlphaOutj)
	Sample(1,AlphaInj)
	Sample(1,BetaOutj)
	Sample(1,BetaInj)
	Sample(1,tMaxToutj)
	Sample(1,tMaxTinj)
EndTable

DataTable(Table_Sk,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressk)
	Sample(1,SapFlwTotk)
	Sample(1,VhOuterk)
	Sample(1,VhInnerk)
	Sample(1,AlphaOutk)
	Sample(1,AlphaInk)
	Sample(1,BetaOutk)
	Sample(1,BetaInk)
	Sample(1,tMaxToutk)
	Sample(1,tMaxTink)
EndTable

DataTable(Table_Sl,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressl)
	Sample(1,SapFlwTotl)
	Sample(1,VhOuterl)
	Sample(1,VhInnerl)
	Sample(1,AlphaOutl)
	Sample(1,AlphaInl)
	Sample(1,BetaOutl)
	Sample(1,BetaInl)
	Sample(1,tMaxToutl)
	Sample(1,tMaxTinl)
EndTable

DataTable(Table_Sm,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressm)
	Sample(1,SapFlwTotm)
	Sample(1,VhOuterm)
	Sample(1,VhInnerm)
	Sample(1,AlphaOutm)
	Sample(1,AlphaInm)
	Sample(1,BetaOutm)
	Sample(1,BetaInm)
	Sample(1,tMaxToutm)
	Sample(1,tMaxTinm)
EndTable

DataTable(Table_Sn,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressn)
	Sample(1,SapFlwTotn)
	Sample(1,VhOutern)
	Sample(1,VhInnern)
	Sample(1,AlphaOutn)
	Sample(1,AlphaInn)
	Sample(1,BetaOutn)
	Sample(1,BetaInn)
	Sample(1,tMaxToutn)
	Sample(1,tMaxTinn)
EndTable

DataTable(Table_So,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddresso)
	Sample(1,SapFlwToto)
	Sample(1,VhOutero)
	Sample(1,VhInnero)
	Sample(1,AlphaOuto)
	Sample(1,AlphaIno)
	Sample(1,BetaOuto)
	Sample(1,BetaIno)
	Sample(1,tMaxTouto)
	Sample(1,tMaxTino)
EndTable

DataTable(Table_Sp,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressp)
	Sample(1,SapFlwTotp)
	Sample(1,VhOuterp)
	Sample(1,VhInnerp)
	Sample(1,AlphaOutp)
	Sample(1,AlphaInp)
	Sample(1,BetaOutp)
	Sample(1,BetaInp)
	Sample(1,tMaxToutp)
	Sample(1,tMaxTinp)
EndTable

DataTable(Table_Sq,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressq)
	Sample(1,SapFlwTotq)
	Sample(1,VhOuterq)
	Sample(1,VhInnerq)
	Sample(1,AlphaOutq)
	Sample(1,AlphaInq)
	Sample(1,BetaOutq)
	Sample(1,BetaInq)
	Sample(1,tMaxToutq)
	Sample(1,tMaxTinq)
EndTable

DataTable(Table_Sr,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressr)
	Sample(1,SapFlwTotr)
	Sample(1,VhOuterr)
	Sample(1,VhInnerr)
	Sample(1,AlphaOutr)
	Sample(1,AlphaInr)
	Sample(1,BetaOutr)
	Sample(1,BetaInr)
	Sample(1,tMaxToutr)
	Sample(1,tMaxTinr)
EndTable

DataTable(Table_Ss,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddresss)
	Sample(1,SapFlwTots)
	Sample(1,VhOuters)
	Sample(1,VhInners)
	Sample(1,AlphaOuts)
	Sample(1,AlphaIns)
	Sample(1,BetaOuts)
	Sample(1,BetaIns)
	Sample(1,tMaxTouts)
	Sample(1,tMaxTins)
EndTable

DataTable(Table_St,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddresst)
	Sample(1,SapFlwTott)
	Sample(1,VhOutert)
	Sample(1,VhInnert)
	Sample(1,AlphaOutt)
	Sample(1,AlphaInt)
	Sample(1,BetaOutt)
	Sample(1,BetaInt)
	Sample(1,tMaxToutt)
	Sample(1,tMaxTint)
EndTable

DataTable(Table_Su,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressu)
	Sample(1,SapFlwTotu)
	Sample(1,VhOuteru)
	Sample(1,VhInneru)
	Sample(1,AlphaOutu)
	Sample(1,AlphaInu)
	Sample(1,BetaOutu)
	Sample(1,BetaInu)
	Sample(1,tMaxToutu)
	Sample(1,tMaxTinu)
EndTable

DataTable(Table_Sv,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressv)
	Sample(1,SapFlwTotv)
	Sample(1,VhOuterv)
	Sample(1,VhInnerv)
	Sample(1,AlphaOutv)
	Sample(1,AlphaInv)
	Sample(1,BetaOutv)
	Sample(1,BetaInv)
	Sample(1,tMaxToutv)
	Sample(1,tMaxTinv)
EndTable

DataTable(Table_Sw,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressw)
	Sample(1,SapFlwTotw)
	Sample(1,VhOuterw)
	Sample(1,VhInnerw)
	Sample(1,AlphaOutw)
	Sample(1,AlphaInw)
	Sample(1,BetaOutw)
	Sample(1,BetaInw)
	Sample(1,tMaxToutw)
	Sample(1,tMaxTinw)
EndTable

DataTable(Table_Sx,True,-1)
	DataInterval(0,30,Min)
	Minimum(1,BattV,False,False)
	Sample(1,id)
	Sample(1,SensorAddressx)
	Sample(1,SapFlwTotx)
	Sample(1,VhOuterx)
	Sample(1,VhInnerx)
	Sample(1,AlphaOutx)
	Sample(1,AlphaInx)
	Sample(1,BetaOutx)
	Sample(1,BetaInx)
	Sample(1,tMaxToutx)
	Sample(1,tMaxTinx)
EndTable

'--- Main Program ---
BeginProg
	Scan(30,Min)
		'Default CR200 Series Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'User Entered Calculation (from example)
		id = Status.PakBusAddress(1,1)
		SensorAddress0 = 0 ' Sensor index (0 to N-1)
		SensorAddress1 = 1 ' Sensor index (0 to N-1)
		SensorAddress2 = 2 ' Sensor index (0 to N-1)
		SensorAddress3 = 3 ' Sensor index (0 to N-1)
		SensorAddress4 = 4 ' Sensor index (0 to N-1)
		SensorAddress5 = 5 ' Sensor index (0 to N-1)
		SensorAddress6 = 6 ' Sensor index (0 to N-1)
		SensorAddress7 = 7 ' Sensor index (0 to N-1)
		SensorAddress8 = 8 ' Sensor index (0 to N-1)
		SensorAddress9 = 9 ' Sensor index (0 to N-1)
		SensorAddressa = 10 ' Sensor index (0 to N-1)
		SensorAddressb = 11 ' Sensor index (0 to N-1)
		SensorAddressc = 12 ' Sensor index (0 to N-1)
		SensorAddressd = 13 ' Sensor index (0 to N-1)
		SensorAddresse = 14 ' Sensor index (0 to N-1)
		SensorAddressf = 15 ' Sensor index (0 to N-1)
		SensorAddressg = 16 ' Sensor index (0 to N-1)
		SensorAddressh = 17 ' Sensor index (0 to N-1)
		SensorAddressi = 18 ' Sensor index (0 to N-1)
		SensorAddressj = 19 ' Sensor index (0 to N-1)
		SensorAddressk = 20 ' Sensor index (0 to N-1)
		SensorAddressl = 21 ' Sensor index (0 to N-1)
		SensorAddressm = 22 ' Sensor index (0 to N-1)
		SensorAddressn = 23 ' Sensor index (0 to N-1)
		SensorAddresso = 24 ' Sensor index (0 to N-1)
		SensorAddressp = 25 ' Sensor index (0 to N-1)
		SensorAddressq = 26 ' Sensor index (0 to N-1)
		SensorAddressr = 27 ' Sensor index (0 to N-1)
		SensorAddresss = 28 ' Sensor index (0 to N-1)
		SensorAddresst = 29 ' Sensor index (0 to N-1)
		SensorAddressu = 30 ' Sensor index (0 to N-1)
		SensorAddressv = 31 ' Sensor index (0 to N-1)
		SensorAddressw = 32 ' Sensor index (0 to N-1)
		SensorAddressx = 33 ' Sensor index (0 to N-1)

		' --- Collect standard data for Sensor 0 (Address "0") ---
		SDI12Recorder(SDIData_Sensor0(), "0M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor0(1) = NAN Then
			For N_0 = 1 To 9
				SDIData_Sensor0(N_0) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 1 (Address "1") ---
		SDI12Recorder(SDIData_Sensor1(), "1M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor1(1) = NAN Then
			For N_1 = 1 To 9
				SDIData_Sensor1(N_1) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 2 (Address "2") ---
		SDI12Recorder(SDIData_Sensor2(), "2M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor2(1) = NAN Then
			For N_2 = 1 To 9
				SDIData_Sensor2(N_2) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 3 (Address "3") ---
		SDI12Recorder(SDIData_Sensor3(), "3M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor3(1) = NAN Then
			For N_3 = 1 To 9
				SDIData_Sensor3(N_3) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 4 (Address "4") ---
		SDI12Recorder(SDIData_Sensor4(), "4M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor4(1) = NAN Then
			For N_4 = 1 To 9
				SDIData_Sensor4(N_4) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 5 (Address "5") ---
		SDI12Recorder(SDIData_Sensor5(), "5M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor5(1) = NAN Then
			For N_5 = 1 To 9
				SDIData_Sensor5(N_5) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 6 (Address "6") ---
		SDI12Recorder(SDIData_Sensor6(), "6M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor6(1) = NAN Then
			For N_6 = 1 To 9
				SDIData_Sensor6(N_6) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 7 (Address "7") ---
		SDI12Recorder(SDIData_Sensor7(), "7M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor7(1) = NAN Then
			For N_7 = 1 To 9
				SDIData_Sensor7(N_7) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 8 (Address "8") ---
		SDI12Recorder(SDIData_Sensor8(), "8M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor8(1) = NAN Then
			For N_8 = 1 To 9
				SDIData_Sensor8(N_8) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor 9 (Address "9") ---
		SDI12Recorder(SDIData_Sensor9(), "9M!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensor9(1) = NAN Then
			For N_9 = 1 To 9
				SDIData_Sensor9(N_9) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor a (Address "a") ---
		SDI12Recorder(SDIData_Sensora(), "aM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensora(1) = NAN Then
			For N_10 = 1 To 9
				SDIData_Sensora(N_10) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor b (Address "b") ---
		SDI12Recorder(SDIData_Sensorb(), "bM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorb(1) = NAN Then
			For N_11 = 1 To 9
				SDIData_Sensorb(N_11) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor c (Address "c") ---
		SDI12Recorder(SDIData_Sensorc(), "cM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorc(1) = NAN Then
			For N_12 = 1 To 9
				SDIData_Sensorc(N_12) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor d (Address "d") ---
		SDI12Recorder(SDIData_Sensord(), "dM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensord(1) = NAN Then
			For N_13 = 1 To 9
				SDIData_Sensord(N_13) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor e (Address "e") ---
		SDI12Recorder(SDIData_Sensore(), "eM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensore(1) = NAN Then
			For N_14 = 1 To 9
				SDIData_Sensore(N_14) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor f (Address "f") ---
		SDI12Recorder(SDIData_Sensorf(), "fM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorf(1) = NAN Then
			For N_15 = 1 To 9
				SDIData_Sensorf(N_15) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor g (Address "g") ---
		SDI12Recorder(SDIData_Sensorg(), "gM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorg(1) = NAN Then
			For N_16 = 1 To 9
				SDIData_Sensorg(N_16) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor h (Address "h") ---
		SDI12Recorder(SDIData_Sensorh(), "hM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorh(1) = NAN Then
			For N_17 = 1 To 9
				SDIData_Sensorh(N_17) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor i (Address "i") ---
		SDI12Recorder(SDIData_Sensori(), "iM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensori(1) = NAN Then
			For N_18 = 1 To 9
				SDIData_Sensori(N_18) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor j (Address "j") ---
		SDI12Recorder(SDIData_Sensorj(), "jM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorj(1) = NAN Then
			For N_19 = 1 To 9
				SDIData_Sensorj(N_19) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor k (Address "k") ---
		SDI12Recorder(SDIData_Sensork(), "kM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensork(1) = NAN Then
			For N_20 = 1 To 9
				SDIData_Sensork(N_20) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor l (Address "l") ---
		SDI12Recorder(SDIData_Sensorl(), "lM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorl(1) = NAN Then
			For N_21 = 1 To 9
				SDIData_Sensorl(N_21) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor m (Address "m") ---
		SDI12Recorder(SDIData_Sensorm(), "mM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorm(1) = NAN Then
			For N_22 = 1 To 9
				SDIData_Sensorm(N_22) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor n (Address "n") ---
		SDI12Recorder(SDIData_Sensorn(), "nM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorn(1) = NAN Then
			For N_23 = 1 To 9
				SDIData_Sensorn(N_23) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor o (Address "o") ---
		SDI12Recorder(SDIData_Sensoro(), "oM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensoro(1) = NAN Then
			For N_24 = 1 To 9
				SDIData_Sensoro(N_24) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor p (Address "p") ---
		SDI12Recorder(SDIData_Sensorp(), "pM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorp(1) = NAN Then
			For N_25 = 1 To 9
				SDIData_Sensorp(N_25) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor q (Address "q") ---
		SDI12Recorder(SDIData_Sensorq(), "qM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorq(1) = NAN Then
			For N_26 = 1 To 9
				SDIData_Sensorq(N_26) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor r (Address "r") ---
		SDI12Recorder(SDIData_Sensorr(), "rM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorr(1) = NAN Then
			For N_27 = 1 To 9
				SDIData_Sensorr(N_27) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor s (Address "s") ---
		SDI12Recorder(SDIData_Sensors(), "sM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensors(1) = NAN Then
			For N_28 = 1 To 9
				SDIData_Sensors(N_28) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor t (Address "t") ---
		SDI12Recorder(SDIData_Sensort(), "tM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensort(1) = NAN Then
			For N_29 = 1 To 9
				SDIData_Sensort(N_29) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor u (Address "u") ---
		SDI12Recorder(SDIData_Sensoru(), "uM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensoru(1) = NAN Then
			For N_30 = 1 To 9
				SDIData_Sensoru(N_30) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor v (Address "v") ---
		SDI12Recorder(SDIData_Sensorv(), "vM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorv(1) = NAN Then
			For N_31 = 1 To 9
				SDIData_Sensorv(N_31) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor w (Address "w") ---
		SDI12Recorder(SDIData_Sensorw(), "wM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorw(1) = NAN Then
			For N_32 = 1 To 9
				SDIData_Sensorw(N_32) = NAN
			Next
		EndIf

		' --- Collect standard data for Sensor x (Address "x") ---
		SDI12Recorder(SDIData_Sensorx(), "xM!", 1, 0)
		'Reset all Generic SDI-12 Sensor measurements if NAN is returned to the first element
		If SDIData_Sensorx(1) = NAN Then
			For N_33 = 1 To 9
				SDIData_Sensorx(N_33) = NAN
			Next
		EndIf

		'Call Data Tables and Store Data
		CallTable Table_S0
		CallTable Table_S1
		CallTable Table_S2
		CallTable Table_S3
		CallTable Table_S4
		CallTable Table_S5
		CallTable Table_S6
		CallTable Table_S7
		CallTable Table_S8
		CallTable Table_S9
		CallTable Table_Sa
		CallTable Table_Sb
		CallTable Table_Sc
		CallTable Table_Sd
		CallTable Table_Se
		CallTable Table_Sf
		CallTable Table_Sg
		CallTable Table_Sh
		CallTable Table_Si
		CallTable Table_Sj
		CallTable Table_Sk
		CallTable Table_Sl
		CallTable Table_Sm
		CallTable Table_Sn
		CallTable Table_So
		CallTable Table_Sp
		CallTable Table_Sq
		CallTable Table_Sr
		CallTable Table_Ss
		CallTable Table_St
		CallTable Table_Su
		CallTable Table_Sv
		CallTable Table_Sw
		CallTable Table_Sx
	NextScan
EndProg
