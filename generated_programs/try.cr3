' CR300 Series Datalogger Program
' Program to log 20 specified measurements from Implexx Sap Flow Sensors
' Generated by Python Script (cr300_generator.py)
' Number of Sensors: 1
' Measurement Interval: 30 minutes

'--- Constants ---
Const MEAST_INTERVAL_MIN = 30
Const SDI12_PORT = C1 ' Default SDI-12 Port on CR300 (can be C1, C2, etc.)
Const STD_MEAS_WAIT_MS = 100000 ' For M! type commands
Const ADD_MEAS_WAIT_MS = 2000 ' For M1-M6 type commands

'--- Declare Public Variables ---
Public PTemp As Float
Public Batt_volt As Float

' Variables to hold the measurements for each sensor
Public S0_AlpOut As Float : Units S0_AlpOut=ratio
Public S0_AlpInn As Float : Units S0_AlpInn=ratio
Public S0_BetOut As Float : Units S0_BetOut=ratio
Public S0_BetInn As Float : Units S0_BetInn=ratio
Public S0_tMxTout As Float : Units S0_tMxTout=sec
Public S0_tMxTinn As Float : Units S0_tMxTinn=sec
Public S0_TpDsOut As Float : Units S0_TpDsOut=degC
Public S0_dTDsOut As Float : Units S0_dTDsOut=degC
Public S0_TsDsOut As Float : Units S0_TsDsOut=degC
Public S0_TpUsOut As Float : Units S0_TpUsOut=degC
Public S0_dTUsOut As Float : Units S0_dTUsOut=degC
Public S0_TsUsOut As Float : Units S0_TsUsOut=degC
Public S0_TpDsInn As Float : Units S0_TpDsInn=degC
Public S0_dTDsInn As Float : Units S0_dTDsInn=degC
Public S0_TsDsInn As Float : Units S0_TsDsInn=degC
Public S0_TpUsInn As Float : Units S0_TpUsInn=degC
Public S0_dTUsInn As Float : Units S0_dTUsInn=degC
Public S0_TsUsInn As Float : Units S0_TsUsInn=degC
Public S0_tMxTUsO As Float : Units S0_tMxTUsO=sec
Public S0_tMxTUsI As Float : Units S0_tMxTUsI=sec

' Temporary array for SDI12Recorder responses
Dim TempSDIRd(6) As Float ' Max 6 values from any single D0! call

Dim SDI12CmdString As String * 10 ' For commands like aM!, aD0!
Dim SDI12AddrChar As String * 1  ' For single address character
Dim SDI12BaseCmd As String * 3   ' For M!, D0!, M1!, etc.
Dim SDI12ReturnCode As Long
Dim SDI12ExpectedValues As Long ' For atttn 'n' response from M/C commands

'--- DataTable Definition (Single Table for All Sensors) ---
DataTable (SapFlowAll, True, -1)
  DataInterval (0, MEAST_INTERVAL_MIN, Min, 0)
  Sample (1, Batt_volt, FP2)
  Sample (1, PTemp, FP2)
  Sample (1, S0_AlpOut, IEEE4)
  Sample (1, S0_AlpInn, IEEE4)
  Sample (1, S0_BetOut, IEEE4)
  Sample (1, S0_BetInn, IEEE4)
  Sample (1, S0_tMxTout, IEEE4)
  Sample (1, S0_tMxTinn, IEEE4)
  Sample (1, S0_TpDsOut, IEEE4)
  Sample (1, S0_dTDsOut, IEEE4)
  Sample (1, S0_TsDsOut, IEEE4)
  Sample (1, S0_TpUsOut, IEEE4)
  Sample (1, S0_dTUsOut, IEEE4)
  Sample (1, S0_TsUsOut, IEEE4)
  Sample (1, S0_TpDsInn, IEEE4)
  Sample (1, S0_dTDsInn, IEEE4)
  Sample (1, S0_TsDsInn, IEEE4)
  Sample (1, S0_TpUsInn, IEEE4)
  Sample (1, S0_dTUsInn, IEEE4)
  Sample (1, S0_TsUsInn, IEEE4)
  Sample (1, S0_tMxTUsO, IEEE4)
  Sample (1, S0_tMxTUsI, IEEE4)
EndTable

'--- Main Program ---
SequentialMode ' Ensure instructions complete before next
BeginProg
  Scan (MEAST_INTERVAL_MIN, Min, 0, 0)
    PanelTemp (PTemp, 273.15) ' Or remove 273.15 for Celsius
    Battery (Batt_volt)

    ' --- Sensor 0 (Address "0") ---
    SDI12AddrChar = "0"

    ' Standard Measurement (M!)
    SDI12BaseCmd = "M!"
    SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
    SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, SDI12ExpectedValues, 1.0, 0)
    If SDI12ReturnCode = 0 Then
      Delay (0, STD_MEAS_WAIT_MS, mSec)
      SDI12BaseCmd = "D0!"
      SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
      SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, TempSDIRd(1), 1.0, 0, -1, 5)
      If SDI12ReturnCode = 0 Then
        S0_AlpOut = TempSDIRd(4)
        S0_AlpInn = TempSDIRd(5)
      Else
        S0_AlpOut = NAN : S0_AlpInn = NAN
      EndIf
      SDI12BaseCmd = "D1!"
      SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
      SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, TempSDIRd(1), 1.0, 0, -1, 4)
      If SDI12ReturnCode = 0 Then
        S0_BetOut = TempSDIRd(1)
        S0_BetInn = TempSDIRd(2)
        S0_tMxTout = TempSDIRd(3)
        S0_tMxTinn = TempSDIRd(4)
      Else
        S0_BetOut = NAN : S0_BetInn = NAN : S0_tMxTout = NAN : S0_tMxTinn = NAN
      EndIf
    Else
      S0_AlpOut = NAN : S0_AlpInn = NAN : S0_BetOut = NAN : S0_BetInn = NAN : S0_tMxTout = NAN : S0_tMxTinn = NAN
    EndIf

    ' M1! - Outer Thermistor Temperatures
    SDI12BaseCmd = "M1!"
    SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
    SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, SDI12ExpectedValues, 1.0, 0)
    If SDI12ReturnCode = 0 Then
      Delay (0, ADD_MEAS_WAIT_MS, mSec)
      SDI12BaseCmd = "D0!"
      SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
      SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, TempSDIRd(1), 1.0, 0, -1, 6)
      If SDI12ReturnCode = 0 Then
        S0_TpDsOut = TempSDIRd(1) : S0_dTDsOut = TempSDIRd(2) : S0_TsDsOut = TempSDIRd(3)
        S0_TpUsOut = TempSDIRd(4) : S0_dTUsOut = TempSDIRd(5) : S0_TsUsOut = TempSDIRd(6)
      Else
        S0_TpDsOut = NAN : S0_dTDsOut = NAN : S0_TsDsOut = NAN : S0_TpUsOut = NAN : S0_dTUsOut = NAN : S0_TsUsOut = NAN
      EndIf
    Else
      S0_TpDsOut = NAN : S0_dTDsOut = NAN : S0_TsDsOut = NAN : S0_TpUsOut = NAN : S0_dTUsOut = NAN : S0_TsUsOut = NAN
    EndIf

    ' M2! - Inner Thermistor Temperatures
    SDI12BaseCmd = "M2!"
    SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
    SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, SDI12ExpectedValues, 1.0, 0)
    If SDI12ReturnCode = 0 Then
      Delay (0, ADD_MEAS_WAIT_MS, mSec)
      SDI12BaseCmd = "D0!"
      SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
      SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, TempSDIRd(1), 1.0, 0, -1, 6)
      If SDI12ReturnCode = 0 Then
        S0_TpDsInn = TempSDIRd(1) : S0_dTDsInn = TempSDIRd(2) : S0_TsDsInn = TempSDIRd(3)
        S0_TpUsInn = TempSDIRd(4) : S0_dTUsInn = TempSDIRd(5) : S0_TsUsInn = TempSDIRd(6)
      Else
        S0_TpDsInn = NAN : S0_dTDsInn = NAN : S0_TsDsInn = NAN : S0_TpUsInn = NAN : S0_dTUsInn = NAN : S0_TsUsInn = NAN
      EndIf
    Else
      S0_TpDsInn = NAN : S0_dTDsInn = NAN : S0_TsDsInn = NAN : S0_TpUsInn = NAN : S0_dTUsInn = NAN : S0_TsUsInn = NAN
    EndIf

    ' M5! - Upstream Thermistor Max Temp Times
    SDI12BaseCmd = "M5!"
    SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
    SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, SDI12ExpectedValues, 1.0, 0)
    If SDI12ReturnCode = 0 Then
      Delay (0, ADD_MEAS_WAIT_MS, mSec)
      SDI12BaseCmd = "D0!"
      SDI12CmdString = SDI12AddrChar + SDI12BaseCmd
      SDI12Recorder (SDI12ReturnCode, SDI12_PORT, SDI12CmdString, TempSDIRd(1), 1.0, 0, -1, 2)
      If SDI12ReturnCode = 0 Then
        S0_tMxTUsO = TempSDIRd(1)
        S0_tMxTUsI = TempSDIRd(2)
      Else
        S0_tMxTUsO = NAN : S0_tMxTUsI = NAN
      EndIf
    Else
      S0_tMxTUsO = NAN : S0_tMxTUsI = NAN
    EndIf

    CallTable SapFlowAll
  NextScan
EndProg